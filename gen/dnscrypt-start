#!/bin/sh
[ `pidof $(basename $0)|wc -w` -gt 2 ] && exit 0
[ -f /jffs/dnscrypt/.config ] && . /jffs/dnscrypt/.config
NONROOT="/jffs/dnscrypt/nonroot nobody"
DNSCRYPT_START="/jffs/dnscrypt/dnscrypt-proxy --local-address=127.0.0.1:65053 --daemonize --loglevel=4 -L /jffs/dnscrypt/dnscrypt-resolvers.csv -R $OPENDNS_SERVER"

update_opendns () {
  if [ -z "$OPENDNS_USER" ] || [ -z "$OPENDNS_PASSWORD" ]; then
    return
  fi
  ARG=$1
  [ $ARG -gt 2 ] && return
  RET=`curl -k -s -u "$OPENDNS_USER:$OPENDNS_PASSWORD" "https://updates.opendns.com/nic/update?hostname="`
  case "$RET" in
    good*)
      logger "OpenDNS: Update IP succeeded"
      ;;
    badauth*)
      logger "OpenDNS: Wrong username or password"
      ;;
    *)
      logger "OpenDNS: Received error $RET"
      sleep 1
      update_opendns $((ARG+1))
      ;;
  esac
}

(
DNSCRYPT_PID=`pidof dnscrypt-proxy`
if [ -z "$DNSCRYPT_PID" ]; then
  $NONROOT $DNSCRYPT_START -I
  if [ $? -eq 0 ]; then
    logger "dnscrypt-proxy started for boot services"
  else
    logger "ERROR: Unable to start dnscrypt-proxy for boot services"
  fi
else
  OLD_CMD="`cat /proc/$DNSCRYPT_PID/cmdline | tr '\000' ' '`"
  if [ "${OLD_CMD%?}" == "$DNSCRYPT_START" ]; then
    update_opendns 0
    exit 0
  fi
fi
update_opendns 0

while [ `nvram get ntp_ready` -eq 0 ]; do
  sleep 2
done
killall dnscrypt-proxy
$NONROOT $DNSCRYPT_START
if [ $? -eq 0 ]; then
  logger "dnscrypt-proxy restarted for normal operations"
else
  logger "ERROR: Unable to start dnscrypt-proxy for normal operations"
fi
)&
