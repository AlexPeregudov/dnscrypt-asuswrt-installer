#!/bin/sh
[ `pidof $(basename $0)|wc -w` -gt 2 ] && exit 0
[ -f /jffs/dnscrypt/.config ] && . /jffs/dnscrypt/.config
NONROOT="nonroot nobody"
DNSCRYPT_START1="dnscrypt-proxy --local-address=127.0.0.1:65053 --daemonize --loglevel=4 -R $DNS1"
DNSCRYPT_START2="dnscrypt-proxy --local-address=127.0.0.1:65054 --daemonize --loglevel=4 -R $DNS2"

start_dnscrypt () {
  while [ `nvram get ntp_ready` -eq 0 ]; do sleep 1; done
  killall dnscrypt-proxy
  logger "Start dnscrypt-proxy for normal operations"
  $NONROOT $DNSCRYPT_START1
  [ "$DNS2" ] && $NONROOT $DNSCRYPT_START2
}

update_opendns () {
  if [ -z "$OPENDNS_USER" ] || [ -z "$OPENDNS_PASSWORD" ]; then
    return
  fi
  ARG=$1
  [ $ARG -gt 2 ] && return
  RET=`curl -k -s -u "$OPENDNS_USER:$OPENDNS_PASSWORD" "https://updates.opendns.com/nic/update?hostname="`
  case "$RET" in
    good*)
      logger "OpenDNS: Update IP succeeded"
      ;;
    badauth*)
      logger "OpenDNS: Wrong username or password"
      ;;
    *)
      logger "OpenDNS: Received error $RET"
      sleep 1
      update_opendns $((ARG+1))
      ;;
  esac
}

(
[ -z "`pidof haveged`" ] && /jffs/dnscrypt/haveged -w1024 -v1
while [ -z "`which dnscrypt-proxy`" ]; do sleep 1; done
if [ -z "`pidof dnscrypt-proxy`" ]; then
  if [ `nvram get ntp_ready` -eq 0 ]; then
    BOOT=1
    $NONROOT $DNSCRYPT_START1 -I
    if [ $? -eq 0 ]; then
      logger "dnscrypt-proxy started for boot services"
    else
      logger "ERROR: Unable to start dnscrypt-proxy for boot services"
    fi
  else
    start_dnscrypt
  fi
fi
update_opendns 0
[ $BOOT ] && start_dnscrypt
)&
